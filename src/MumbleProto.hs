{-# LANGUAGE BangPatterns, DeriveDataTypeable, DeriveGeneric, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC  -fno-warn-unused-imports #-}
module MumbleProto (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified GHC.Generics as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)

protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".MumbleProto\", haskellPrefix = [], parentModule = [], baseName = MName \"MumbleProto\"}, protoFilePath = [\"MumbleProto.hs\"], protoSource = \"Mumble.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.Version\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"Version\"}, descFilePath = [\"MumbleProto\",\"Version.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Version.version\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Version\"], baseName' = FName \"version\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Version.release\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Version\"], baseName' = FName \"release\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Version.os\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Version\"], baseName' = FName \"os\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Version.os_version\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Version\"], baseName' = FName \"os_version\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.UDPTunnel\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"UDPTunnel\"}, descFilePath = [\"MumbleProto\",\"UDPTunnel.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UDPTunnel.packet\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UDPTunnel\"], baseName' = FName \"packet\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.Authenticate\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"Authenticate\"}, descFilePath = [\"MumbleProto\",\"Authenticate.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Authenticate.username\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Authenticate\"], baseName' = FName \"username\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Authenticate.password\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Authenticate\"], baseName' = FName \"password\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Authenticate.tokens\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Authenticate\"], baseName' = FName \"tokens\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Authenticate.celt_versions\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Authenticate\"], baseName' = FName \"celt_versions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Just (WireTag {getWireTag = 32},WireTag {getWireTag = 34}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Authenticate.opus\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Authenticate\"], baseName' = FName \"opus\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.Ping\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"Ping\"}, descFilePath = [\"MumbleProto\",\"Ping.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.timestamp\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"timestamp\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.good\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"good\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.late\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"late\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.lost\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"lost\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.resync\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"resync\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.udp_packets\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"udp_packets\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.tcp_packets\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"tcp_packets\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.udp_ping_avg\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"udp_ping_avg\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 69}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.udp_ping_var\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"udp_ping_var\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 77}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.tcp_ping_avg\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"tcp_ping_avg\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 85}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Ping.tcp_ping_var\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Ping\"], baseName' = FName \"tcp_ping_var\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 93}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.Reject\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"Reject\"}, descFilePath = [\"MumbleProto\",\"Reject.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Reject.type\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Reject\"], baseName' = FName \"type'\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.Reject.RejectType\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"Reject\"], baseName = MName \"RejectType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.Reject.reason\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"Reject\"], baseName' = FName \"reason\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ServerSync\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"ServerSync\"}, descFilePath = [\"MumbleProto\",\"ServerSync.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerSync.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerSync\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerSync.max_bandwidth\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerSync\"], baseName' = FName \"max_bandwidth\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerSync.welcome_text\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerSync\"], baseName' = FName \"welcome_text\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerSync.permissions\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerSync\"], baseName' = FName \"permissions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ChannelRemove\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"ChannelRemove\"}, descFilePath = [\"MumbleProto\",\"ChannelRemove.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelRemove.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelRemove\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ChannelState\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"ChannelState\"}, descFilePath = [\"MumbleProto\",\"ChannelState.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.parent\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"parent\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.name\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"name\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.links\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"links\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Just (WireTag {getWireTag = 32},WireTag {getWireTag = 34}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.description\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"description\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.links_add\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"links_add\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Just (WireTag {getWireTag = 48},WireTag {getWireTag = 50}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.links_remove\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"links_remove\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Just (WireTag {getWireTag = 56},WireTag {getWireTag = 58}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.temporary\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"temporary\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.position\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"position\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.description_hash\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"description_hash\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ChannelState.max_users\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ChannelState\"], baseName' = FName \"max_users\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.UserRemove\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"UserRemove\"}, descFilePath = [\"MumbleProto\",\"UserRemove.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserRemove.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserRemove\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserRemove.actor\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserRemove\"], baseName' = FName \"actor\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserRemove.reason\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserRemove\"], baseName' = FName \"reason\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserRemove.ban\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserRemove\"], baseName' = FName \"ban\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.UserState\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"UserState\"}, descFilePath = [\"MumbleProto\",\"UserState.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.actor\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"actor\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.name\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"name\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.user_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"user_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.mute\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"mute\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.deaf\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"deaf\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.suppress\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"suppress\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.self_mute\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"self_mute\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.self_deaf\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"self_deaf\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.texture\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"texture\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.plugin_context\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"plugin_context\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.plugin_identity\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"plugin_identity\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 106}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.comment\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"comment\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.hash\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"hash\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.comment_hash\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"comment_hash\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 130}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.texture_hash\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"texture_hash\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 138}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.priority_speaker\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"priority_speaker\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 144}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserState.recording\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserState\"], baseName' = FName \"recording\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 152}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.BanList\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"BanList\"}, descFilePath = [\"MumbleProto\",\"BanList.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.bans\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\"], baseName' = FName \"bans\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.BanList.BanEntry\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"BanList\"], baseName = MName \"BanEntry\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.query\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\"], baseName' = FName \"query\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.BanList.BanEntry\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"BanList\"], baseName = MName \"BanEntry\"}, descFilePath = [\"MumbleProto\",\"BanList\",\"BanEntry.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.BanEntry.address\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\",MName \"BanEntry\"], baseName' = FName \"address\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.BanEntry.mask\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\",MName \"BanEntry\"], baseName' = FName \"mask\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.BanEntry.name\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\",MName \"BanEntry\"], baseName' = FName \"name\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.BanEntry.hash\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\",MName \"BanEntry\"], baseName' = FName \"hash\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.BanEntry.reason\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\",MName \"BanEntry\"], baseName' = FName \"reason\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.BanEntry.start\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\",MName \"BanEntry\"], baseName' = FName \"start\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.BanList.BanEntry.duration\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"BanList\",MName \"BanEntry\"], baseName' = FName \"duration\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.TextMessage\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"TextMessage\"}, descFilePath = [\"MumbleProto\",\"TextMessage.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.TextMessage.actor\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"TextMessage\"], baseName' = FName \"actor\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.TextMessage.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"TextMessage\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Just (WireTag {getWireTag = 16},WireTag {getWireTag = 18}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.TextMessage.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"TextMessage\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Just (WireTag {getWireTag = 24},WireTag {getWireTag = 26}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.TextMessage.tree_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"TextMessage\"], baseName' = FName \"tree_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Just (WireTag {getWireTag = 32},WireTag {getWireTag = 34}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.TextMessage.message\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"TextMessage\"], baseName' = FName \"message\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.PermissionDenied\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"PermissionDenied\"}, descFilePath = [\"MumbleProto\",\"PermissionDenied.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionDenied.permission\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName' = FName \"permission\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionDenied.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionDenied.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionDenied.reason\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName' = FName \"reason\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionDenied.type\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName' = FName \"type'\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.PermissionDenied.DenyType\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName = MName \"DenyType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionDenied.name\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName' = FName \"name\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ACL\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"ACL\"}, descFilePath = [\"MumbleProto\",\"ACL.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.inherit_acls\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\"], baseName' = FName \"inherit_acls\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.groups\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\"], baseName' = FName \"groups\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.ACL.ChanGroup\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"ACL\"], baseName = MName \"ChanGroup\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.acls\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\"], baseName' = FName \"acls\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.ACL.ChanACL\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"ACL\"], baseName = MName \"ChanACL\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.query\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\"], baseName' = FName \"query\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ACL.ChanGroup\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"ACL\"], baseName = MName \"ChanGroup\"}, descFilePath = [\"MumbleProto\",\"ACL\",\"ChanGroup.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanGroup.name\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanGroup\"], baseName' = FName \"name\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanGroup.inherited\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanGroup\"], baseName' = FName \"inherited\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanGroup.inherit\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanGroup\"], baseName' = FName \"inherit\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanGroup.inheritable\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanGroup\"], baseName' = FName \"inheritable\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanGroup.add\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanGroup\"], baseName' = FName \"add\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Just (WireTag {getWireTag = 40},WireTag {getWireTag = 42}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanGroup.remove\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanGroup\"], baseName' = FName \"remove\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Just (WireTag {getWireTag = 48},WireTag {getWireTag = 50}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanGroup.inherited_members\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanGroup\"], baseName' = FName \"inherited_members\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Just (WireTag {getWireTag = 56},WireTag {getWireTag = 58}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ACL.ChanACL\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"ACL\"], baseName = MName \"ChanACL\"}, descFilePath = [\"MumbleProto\",\"ACL\",\"ChanACL.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanACL.apply_here\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanACL\"], baseName' = FName \"apply_here\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanACL.apply_subs\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanACL\"], baseName' = FName \"apply_subs\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanACL.inherited\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanACL\"], baseName' = FName \"inherited\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanACL.user_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanACL\"], baseName' = FName \"user_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanACL.group\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanACL\"], baseName' = FName \"group\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanACL.grant\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanACL\"], baseName' = FName \"grant\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ACL.ChanACL.deny\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ACL\",MName \"ChanACL\"], baseName' = FName \"deny\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.QueryUsers\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"QueryUsers\"}, descFilePath = [\"MumbleProto\",\"QueryUsers.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.QueryUsers.ids\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"QueryUsers\"], baseName' = FName \"ids\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Just (WireTag {getWireTag = 8},WireTag {getWireTag = 10}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.QueryUsers.names\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"QueryUsers\"], baseName' = FName \"names\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.CryptSetup\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"CryptSetup\"}, descFilePath = [\"MumbleProto\",\"CryptSetup.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.CryptSetup.key\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"CryptSetup\"], baseName' = FName \"key\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.CryptSetup.client_nonce\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"CryptSetup\"], baseName' = FName \"client_nonce\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.CryptSetup.server_nonce\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"CryptSetup\"], baseName' = FName \"server_nonce\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ContextActionModify\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"ContextActionModify\"}, descFilePath = [\"MumbleProto\",\"ContextActionModify.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ContextActionModify.action\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ContextActionModify\"], baseName' = FName \"action\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ContextActionModify.text\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ContextActionModify\"], baseName' = FName \"text\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ContextActionModify.context\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ContextActionModify\"], baseName' = FName \"context\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ContextActionModify.operation\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ContextActionModify\"], baseName' = FName \"operation\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.ContextActionModify.Operation\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"ContextActionModify\"], baseName = MName \"Operation\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ContextAction\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"ContextAction\"}, descFilePath = [\"MumbleProto\",\"ContextAction.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ContextAction.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ContextAction\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ContextAction.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ContextAction\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ContextAction.action\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ContextAction\"], baseName' = FName \"action\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.UserList\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"UserList\"}, descFilePath = [\"MumbleProto\",\"UserList.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserList.users\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserList\"], baseName' = FName \"users\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.UserList.User\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"UserList\"], baseName = MName \"User\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.UserList.User\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"UserList\"], baseName = MName \"User\"}, descFilePath = [\"MumbleProto\",\"UserList\",\"User.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserList.User.user_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserList\",MName \"User\"], baseName' = FName \"user_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserList.User.name\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserList\",MName \"User\"], baseName' = FName \"name\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserList.User.last_seen\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserList\",MName \"User\"], baseName' = FName \"last_seen\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserList.User.last_channel\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserList\",MName \"User\"], baseName' = FName \"last_channel\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.VoiceTarget\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"VoiceTarget\"}, descFilePath = [\"MumbleProto\",\"VoiceTarget.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.VoiceTarget.id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"VoiceTarget\"], baseName' = FName \"id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.VoiceTarget.targets\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"VoiceTarget\"], baseName' = FName \"targets\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.VoiceTarget.Target\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"VoiceTarget\"], baseName = MName \"Target\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.VoiceTarget.Target\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"VoiceTarget\"], baseName = MName \"Target\"}, descFilePath = [\"MumbleProto\",\"VoiceTarget\",\"Target.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.VoiceTarget.Target.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"VoiceTarget\",MName \"Target\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Just (WireTag {getWireTag = 8},WireTag {getWireTag = 10}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.VoiceTarget.Target.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"VoiceTarget\",MName \"Target\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.VoiceTarget.Target.group\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"VoiceTarget\",MName \"Target\"], baseName' = FName \"group\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.VoiceTarget.Target.links\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"VoiceTarget\",MName \"Target\"], baseName' = FName \"links\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.VoiceTarget.Target.children\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"VoiceTarget\",MName \"Target\"], baseName' = FName \"children\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.PermissionQuery\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"PermissionQuery\"}, descFilePath = [\"MumbleProto\",\"PermissionQuery.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionQuery.channel_id\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionQuery\"], baseName' = FName \"channel_id\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionQuery.permissions\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionQuery\"], baseName' = FName \"permissions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.PermissionQuery.flush\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"PermissionQuery\"], baseName' = FName \"flush\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.CodecVersion\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"CodecVersion\"}, descFilePath = [\"MumbleProto\",\"CodecVersion.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.CodecVersion.alpha\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"CodecVersion\"], baseName' = FName \"alpha\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.CodecVersion.beta\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"CodecVersion\"], baseName' = FName \"beta\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.CodecVersion.prefer_alpha\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"CodecVersion\"], baseName' = FName \"prefer_alpha\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"true\", hsDefault = Just (HsDef'Bool True)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.CodecVersion.opus\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"CodecVersion\"], baseName' = FName \"opus\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.UserStats\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"UserStats\"}, descFilePath = [\"MumbleProto\",\"UserStats.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.session\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"session\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.stats_only\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"stats_only\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.certificates\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"certificates\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.from_client\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"from_client\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.UserStats.Stats\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"UserStats\"], baseName = MName \"Stats\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.from_server\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"from_server\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.UserStats.Stats\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"UserStats\"], baseName = MName \"Stats\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.udp_packets\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"udp_packets\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.tcp_packets\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"tcp_packets\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.udp_ping_avg\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"udp_ping_avg\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 69}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.udp_ping_var\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"udp_ping_var\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 77}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.tcp_ping_avg\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"tcp_ping_avg\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 85}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.tcp_ping_var\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"tcp_ping_var\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 93}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.version\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"version\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".MumbleProto.Version\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"Version\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.celt_versions\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"celt_versions\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Just (WireTag {getWireTag = 104},WireTag {getWireTag = 106}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.address\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"address\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.bandwidth\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"bandwidth\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 120}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.onlinesecs\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"onlinesecs\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.idlesecs\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"idlesecs\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 136}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.strong_certificate\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"strong_certificate\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 144}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.opus\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\"], baseName' = FName \"opus\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 152}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.UserStats.Stats\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"UserStats\"], baseName = MName \"Stats\"}, descFilePath = [\"MumbleProto\",\"UserStats\",\"Stats.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.Stats.good\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\",MName \"Stats\"], baseName' = FName \"good\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.Stats.late\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\",MName \"Stats\"], baseName' = FName \"late\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.Stats.lost\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\",MName \"Stats\"], baseName' = FName \"lost\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.UserStats.Stats.resync\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"UserStats\",MName \"Stats\"], baseName' = FName \"resync\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.RequestBlob\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"RequestBlob\"}, descFilePath = [\"MumbleProto\",\"RequestBlob.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.RequestBlob.session_texture\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"RequestBlob\"], baseName' = FName \"session_texture\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Just (WireTag {getWireTag = 8},WireTag {getWireTag = 10}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.RequestBlob.session_comment\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"RequestBlob\"], baseName' = FName \"session_comment\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Just (WireTag {getWireTag = 16},WireTag {getWireTag = 18}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.RequestBlob.channel_description\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"RequestBlob\"], baseName' = FName \"channel_description\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Just (WireTag {getWireTag = 24},WireTag {getWireTag = 26}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.ServerConfig\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"ServerConfig\"}, descFilePath = [\"MumbleProto\",\"ServerConfig.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerConfig.max_bandwidth\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerConfig\"], baseName' = FName \"max_bandwidth\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerConfig.welcome_text\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerConfig\"], baseName' = FName \"welcome_text\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerConfig.allow_html\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerConfig\"], baseName' = FName \"allow_html\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerConfig.message_length\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerConfig\"], baseName' = FName \"message_length\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerConfig.image_message_length\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerConfig\"], baseName' = FName \"image_message_length\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.ServerConfig.max_users\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"ServerConfig\"], baseName' = FName \"max_users\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True},DescriptorInfo {descName = ProtoName {protobufName = FIName \".MumbleProto.SuggestConfig\", haskellPrefix = [], parentModule = [MName \"MumbleProto\"], baseName = MName \"SuggestConfig\"}, descFilePath = [\"MumbleProto\",\"SuggestConfig.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.SuggestConfig.version\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"SuggestConfig\"], baseName' = FName \"version\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.SuggestConfig.positional\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"SuggestConfig\"], baseName' = FName \"positional\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".MumbleProto.SuggestConfig.push_to_talk\", haskellPrefix' = [], parentModule' = [MName \"MumbleProto\",MName \"SuggestConfig\"], baseName' = FName \"push_to_talk\", baseNamePrefix' = \"_\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = True}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".MumbleProto.Reject.RejectType\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"Reject\"], baseName = MName \"RejectType\"}, enumFilePath = [\"MumbleProto\",\"Reject\",\"RejectType.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"None\"),(EnumCode {getEnumCode = 1},\"WrongVersion\"),(EnumCode {getEnumCode = 2},\"InvalidUsername\"),(EnumCode {getEnumCode = 3},\"WrongUserPW\"),(EnumCode {getEnumCode = 4},\"WrongServerPW\"),(EnumCode {getEnumCode = 5},\"UsernameInUse\"),(EnumCode {getEnumCode = 6},\"ServerFull\"),(EnumCode {getEnumCode = 7},\"NoCertificate\"),(EnumCode {getEnumCode = 8},\"AuthenticatorFail\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".MumbleProto.PermissionDenied.DenyType\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"PermissionDenied\"], baseName = MName \"DenyType\"}, enumFilePath = [\"MumbleProto\",\"PermissionDenied\",\"DenyType.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"Text\"),(EnumCode {getEnumCode = 1},\"Permission\"),(EnumCode {getEnumCode = 2},\"SuperUser\"),(EnumCode {getEnumCode = 3},\"ChannelName\"),(EnumCode {getEnumCode = 4},\"TextTooLong\"),(EnumCode {getEnumCode = 5},\"H9K\"),(EnumCode {getEnumCode = 6},\"TemporaryChannel\"),(EnumCode {getEnumCode = 7},\"MissingCertificate\"),(EnumCode {getEnumCode = 8},\"UserName\"),(EnumCode {getEnumCode = 9},\"ChannelFull\"),(EnumCode {getEnumCode = 10},\"NestingLimit\"),(EnumCode {getEnumCode = 11},\"ChannelCountLimit\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".MumbleProto.ContextActionModify.Context\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"ContextActionModify\"], baseName = MName \"Context\"}, enumFilePath = [\"MumbleProto\",\"ContextActionModify\",\"Context.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"Server\"),(EnumCode {getEnumCode = 2},\"Channel\"),(EnumCode {getEnumCode = 4},\"User\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".MumbleProto.ContextActionModify.Operation\", haskellPrefix = [], parentModule = [MName \"MumbleProto\",MName \"ContextActionModify\"], baseName = MName \"Operation\"}, enumFilePath = [\"MumbleProto\",\"ContextActionModify\",\"Operation.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"Add\"),(EnumCode {getEnumCode = 1},\"Remove\")]}], oneofs = [], knownKeyMap = fromList []}"

fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\146#\n\fMumble.proto\DC2\vMumbleProto\"K\n\aVersion\DC2\SI\n\aversion\CAN\SOH \SOH(\r\DC2\SI\n\arelease\CAN\STX \SOH(\t\DC2\n\n\STXos\CAN\ETX \SOH(\t\DC2\DC2\n\nos_version\CAN\EOT \SOH(\t\"\ESC\n\tUDPTunnel\DC2\SO\n\ACKpacket\CAN\SOH \STX(\f\"n\n\fAuthenticate\DC2\DLE\n\busername\CAN\SOH \SOH(\t\DC2\DLE\n\bpassword\CAN\STX \SOH(\t\DC2\SO\n\ACKtokens\CAN\ETX \ETX(\t\DC2\NAK\n\rcelt_versions\CAN\EOT \ETX(\ENQ\DC2\DC3\n\EOTopus\CAN\ENQ \SOH(\b:\ENQfalse\"\213\SOH\n\EOTPing\DC2\DC1\n\ttimestamp\CAN\SOH \SOH(\EOT\DC2\f\n\EOTgood\CAN\STX \SOH(\r\DC2\f\n\EOTlate\CAN\ETX \SOH(\r\DC2\f\n\EOTlost\CAN\EOT \SOH(\r\DC2\SO\n\ACKresync\CAN\ENQ \SOH(\r\DC2\DC3\n\vudp_packets\CAN\ACK \SOH(\r\DC2\DC3\n\vtcp_packets\CAN\a \SOH(\r\DC2\DC4\n\fudp_ping_avg\CAN\b \SOH(\STX\DC2\DC4\n\fudp_ping_var\CAN\t \SOH(\STX\DC2\DC4\n\ftcp_ping_avg\CAN\n \SOH(\STX\DC2\DC4\n\ftcp_ping_var\CAN\v \SOH(\STX\"\247\SOH\n\ACKReject\DC2,\n\EOTtype\CAN\SOH \SOH(\SO2\RS.MumbleProto.Reject.RejectType\DC2\SO\n\ACKreason\CAN\STX \SOH(\t\"\174\SOH\n\nRejectType\DC2\b\n\EOTNone\DLE\NUL\DC2\DLE\n\fWrongVersion\DLE\SOH\DC2\DC3\n\SIInvalidUsername\DLE\STX\DC2\SI\n\vWrongUserPW\DLE\ETX\DC2\DC1\n\rWrongServerPW\DLE\EOT\DC2\DC1\n\rUsernameInUse\DLE\ENQ\DC2\SO\n\nServerFull\DLE\ACK\DC2\DC1\n\rNoCertificate\DLE\a\DC2\NAK\n\DC1AuthenticatorFail\DLE\b\"_\n\nServerSync\DC2\SI\n\asession\CAN\SOH \SOH(\r\DC2\NAK\n\rmax_bandwidth\CAN\STX \SOH(\r\DC2\DC4\n\fwelcome_text\CAN\ETX \SOH(\t\DC2\DC3\n\vpermissions\CAN\EOT \SOH(\EOT\"#\n\rChannelRemove\DC2\DC2\n\nchannel_id\CAN\SOH \STX(\r\"\233\SOH\n\fChannelState\DC2\DC2\n\nchannel_id\CAN\SOH \SOH(\r\DC2\SO\n\ACKparent\CAN\STX \SOH(\r\DC2\f\n\EOTname\CAN\ETX \SOH(\t\DC2\r\n\ENQlinks\CAN\EOT \ETX(\r\DC2\DC3\n\vdescription\CAN\ENQ \SOH(\t\DC2\DC1\n\tlinks_add\CAN\ACK \ETX(\r\DC2\DC4\n\flinks_remove\CAN\a \ETX(\r\DC2\CAN\n\ttemporary\CAN\b \SOH(\b:\ENQfalse\DC2\DC3\n\bposition\CAN\t \SOH(\ENQ:\SOH0\DC2\CAN\n\DLEdescription_hash\CAN\n \SOH(\f\DC2\DC1\n\tmax_users\CAN\v \SOH(\r\"I\n\nUserRemove\DC2\SI\n\asession\CAN\SOH \STX(\r\DC2\r\n\ENQactor\CAN\STX \SOH(\r\DC2\SO\n\ACKreason\CAN\ETX \SOH(\t\DC2\v\n\ETXban\CAN\EOT \SOH(\b\"\236\STX\n\tUserState\DC2\SI\n\asession\CAN\SOH \SOH(\r\DC2\r\n\ENQactor\CAN\STX \SOH(\r\DC2\f\n\EOTname\CAN\ETX \SOH(\t\DC2\SI\n\auser_id\CAN\EOT \SOH(\r\DC2\DC2\n\nchannel_id\CAN\ENQ \SOH(\r\DC2\f\n\EOTmute\CAN\ACK \SOH(\b\DC2\f\n\EOTdeaf\CAN\a \SOH(\b\DC2\DLE\n\bsuppress\CAN\b \SOH(\b\DC2\DC1\n\tself_mute\CAN\t \SOH(\b\DC2\DC1\n\tself_deaf\CAN\n \SOH(\b\DC2\SI\n\atexture\CAN\v \SOH(\f\DC2\SYN\n\SOplugin_context\CAN\f \SOH(\f\DC2\ETB\n\SIplugin_identity\CAN\r \SOH(\t\DC2\SI\n\acomment\CAN\SO \SOH(\t\DC2\f\n\EOThash\CAN\SI \SOH(\t\DC2\DC4\n\fcomment_hash\CAN\DLE \SOH(\f\DC2\DC4\n\ftexture_hash\CAN\DC1 \SOH(\f\DC2\CAN\n\DLEpriority_speaker\CAN\DC2 \SOH(\b\DC2\DC1\n\trecording\CAN\DC3 \SOH(\b\"\196\SOH\n\aBanList\DC2+\n\EOTbans\CAN\SOH \ETX(\v2\GS.MumbleProto.BanList.BanEntry\DC2\DC4\n\ENQquery\CAN\STX \SOH(\b:\ENQfalse\SUBv\n\bBanEntry\DC2\SI\n\aaddress\CAN\SOH \STX(\f\DC2\f\n\EOTmask\CAN\STX \STX(\r\DC2\f\n\EOTname\CAN\ETX \SOH(\t\DC2\f\n\EOThash\CAN\EOT \SOH(\t\DC2\SO\n\ACKreason\CAN\ENQ \SOH(\t\DC2\r\n\ENQstart\CAN\ACK \SOH(\t\DC2\DLE\n\bduration\CAN\a \SOH(\r\"c\n\vTextMessage\DC2\r\n\ENQactor\CAN\SOH \SOH(\r\DC2\SI\n\asession\CAN\STX \ETX(\r\DC2\DC2\n\nchannel_id\CAN\ETX \ETX(\r\DC2\SI\n\atree_id\CAN\EOT \ETX(\r\DC2\SI\n\amessage\CAN\ENQ \STX(\t\"\246\STX\n\DLEPermissionDenied\DC2\DC2\n\npermission\CAN\SOH \SOH(\r\DC2\DC2\n\nchannel_id\CAN\STX \SOH(\r\DC2\SI\n\asession\CAN\ETX \SOH(\r\DC2\SO\n\ACKreason\CAN\EOT \SOH(\t\DC24\n\EOTtype\CAN\ENQ \SOH(\SO2&.MumbleProto.PermissionDenied.DenyType\DC2\f\n\EOTname\CAN\ACK \SOH(\t\"\212\SOH\n\bDenyType\DC2\b\n\EOTText\DLE\NUL\DC2\SO\n\nPermission\DLE\SOH\DC2\r\n\tSuperUser\DLE\STX\DC2\SI\n\vChannelName\DLE\ETX\DC2\SI\n\vTextTooLong\DLE\EOT\DC2\a\n\ETXH9K\DLE\ENQ\DC2\DC4\n\DLETemporaryChannel\DLE\ACK\DC2\SYN\n\DC2MissingCertificate\DLE\a\DC2\f\n\bUserName\DLE\b\DC2\SI\n\vChannelFull\DLE\t\DC2\DLE\n\fNestingLimit\DLE\n\DC2\NAK\n\DC1ChannelCountLimit\DLE\v\"\212\ETX\n\ETXACL\DC2\DC2\n\nchannel_id\CAN\SOH \STX(\r\DC2\SUB\n\finherit_acls\CAN\STX \SOH(\b:\EOTtrue\DC2*\n\ACKgroups\CAN\ETX \ETX(\v2\SUB.MumbleProto.ACL.ChanGroup\DC2&\n\EOTacls\CAN\EOT \ETX(\v2\CAN.MumbleProto.ACL.ChanACL\DC2\DC4\n\ENQquery\CAN\ENQ \SOH(\b:\ENQfalse\SUB\156\SOH\n\tChanGroup\DC2\f\n\EOTname\CAN\SOH \STX(\t\DC2\ETB\n\tinherited\CAN\STX \SOH(\b:\EOTtrue\DC2\NAK\n\ainherit\CAN\ETX \SOH(\b:\EOTtrue\DC2\EM\n\vinheritable\CAN\EOT \SOH(\b:\EOTtrue\DC2\v\n\ETXadd\CAN\ENQ \ETX(\r\DC2\SO\n\ACKremove\CAN\ACK \ETX(\r\DC2\EM\n\DC1inherited_members\CAN\a \ETX(\r\SUB\147\SOH\n\aChanACL\DC2\CAN\n\napply_here\CAN\SOH \SOH(\b:\EOTtrue\DC2\CAN\n\napply_subs\CAN\STX \SOH(\b:\EOTtrue\DC2\ETB\n\tinherited\CAN\ETX \SOH(\b:\EOTtrue\DC2\SI\n\auser_id\CAN\EOT \SOH(\r\DC2\r\n\ENQgroup\CAN\ENQ \SOH(\t\DC2\r\n\ENQgrant\CAN\ACK \SOH(\r\DC2\f\n\EOTdeny\CAN\a \SOH(\r\"(\n\nQueryUsers\DC2\v\n\ETXids\CAN\SOH \ETX(\r\DC2\r\n\ENQnames\CAN\STX \ETX(\t\"E\n\nCryptSetup\DC2\v\n\ETXkey\CAN\SOH \SOH(\f\DC2\DC4\n\fclient_nonce\CAN\STX \SOH(\f\DC2\DC4\n\fserver_nonce\CAN\ETX \SOH(\f\"\211\SOH\n\DC3ContextActionModify\DC2\SO\n\ACKaction\CAN\SOH \STX(\t\DC2\f\n\EOTtext\CAN\STX \SOH(\t\DC2\SI\n\acontext\CAN\ETX \SOH(\r\DC2=\n\toperation\CAN\EOT \SOH(\SO2*.MumbleProto.ContextActionModify.Operation\",\n\aContext\DC2\n\n\ACKServer\DLE\SOH\DC2\v\n\aChannel\DLE\STX\DC2\b\n\EOTUser\DLE\EOT\" \n\tOperation\DC2\a\n\ETXAdd\DLE\NUL\DC2\n\n\ACKRemove\DLE\SOH\"D\n\rContextAction\DC2\SI\n\asession\CAN\SOH \SOH(\r\DC2\DC2\n\nchannel_id\CAN\STX \SOH(\r\DC2\SO\n\ACKaction\CAN\ETX \STX(\t\"\133\SOH\n\bUserList\DC2)\n\ENQusers\CAN\SOH \ETX(\v2\SUB.MumbleProto.UserList.User\SUBN\n\EOTUser\DC2\SI\n\auser_id\CAN\SOH \STX(\r\DC2\f\n\EOTname\CAN\STX \SOH(\t\DC2\DC1\n\tlast_seen\CAN\ETX \SOH(\t\DC2\DC4\n\flast_channel\CAN\EOT \SOH(\r\"\184\SOH\n\vVoiceTarget\DC2\n\n\STXid\CAN\SOH \SOH(\r\DC20\n\atargets\CAN\STX \ETX(\v2\US.MumbleProto.VoiceTarget.Target\SUBk\n\ACKTarget\DC2\SI\n\asession\CAN\SOH \ETX(\r\DC2\DC2\n\nchannel_id\CAN\STX \SOH(\r\DC2\r\n\ENQgroup\CAN\ETX \SOH(\t\DC2\DC4\n\ENQlinks\CAN\EOT \SOH(\b:\ENQfalse\DC2\ETB\n\bchildren\CAN\ENQ \SOH(\b:\ENQfalse\"P\n\SIPermissionQuery\DC2\DC2\n\nchannel_id\CAN\SOH \SOH(\r\DC2\DC3\n\vpermissions\CAN\STX \SOH(\r\DC2\DC4\n\ENQflush\CAN\ETX \SOH(\b:\ENQfalse\"\\\n\fCodecVersion\DC2\r\n\ENQalpha\CAN\SOH \STX(\ENQ\DC2\f\n\EOTbeta\CAN\STX \STX(\ENQ\DC2\SUB\n\fprefer_alpha\CAN\ETX \STX(\b:\EOTtrue\DC2\DC3\n\EOTopus\CAN\EOT \SOH(\b:\ENQfalse\"\184\EOT\n\tUserStats\DC2\SI\n\asession\CAN\SOH \SOH(\r\DC2\EM\n\nstats_only\CAN\STX \SOH(\b:\ENQfalse\DC2\DC4\n\fcertificates\CAN\ETX \ETX(\f\DC21\n\vfrom_client\CAN\EOT \SOH(\v2\FS.MumbleProto.UserStats.Stats\DC21\n\vfrom_server\CAN\ENQ \SOH(\v2\FS.MumbleProto.UserStats.Stats\DC2\DC3\n\vudp_packets\CAN\ACK \SOH(\r\DC2\DC3\n\vtcp_packets\CAN\a \SOH(\r\DC2\DC4\n\fudp_ping_avg\CAN\b \SOH(\STX\DC2\DC4\n\fudp_ping_var\CAN\t \SOH(\STX\DC2\DC4\n\ftcp_ping_avg\CAN\n \SOH(\STX\DC2\DC4\n\ftcp_ping_var\CAN\v \SOH(\STX\DC2%\n\aversion\CAN\f \SOH(\v2\DC4.MumbleProto.Version\DC2\NAK\n\rcelt_versions\CAN\r \ETX(\ENQ\DC2\SI\n\aaddress\CAN\SO \SOH(\f\DC2\DC1\n\tbandwidth\CAN\SI \SOH(\r\DC2\DC2\n\nonlinesecs\CAN\DLE \SOH(\r\DC2\DLE\n\bidlesecs\CAN\DC1 \SOH(\r\DC2!\n\DC2strong_certificate\CAN\DC2 \SOH(\b:\ENQfalse\DC2\DC3\n\EOTopus\CAN\DC3 \SOH(\b:\ENQfalse\SUBA\n\ENQStats\DC2\f\n\EOTgood\CAN\SOH \SOH(\r\DC2\f\n\EOTlate\CAN\STX \SOH(\r\DC2\f\n\EOTlost\CAN\ETX \SOH(\r\DC2\SO\n\ACKresync\CAN\EOT \SOH(\r\"\\\n\vRequestBlob\DC2\ETB\n\SIsession_texture\CAN\SOH \ETX(\r\DC2\ETB\n\SIsession_comment\CAN\STX \ETX(\r\DC2\ESC\n\DC3channel_description\CAN\ETX \ETX(\r\"\152\SOH\n\fServerConfig\DC2\NAK\n\rmax_bandwidth\CAN\SOH \SOH(\r\DC2\DC4\n\fwelcome_text\CAN\STX \SOH(\t\DC2\DC2\n\nallow_html\CAN\ETX \SOH(\b\DC2\SYN\n\SOmessage_length\CAN\EOT \SOH(\r\DC2\FS\n\DC4image_message_length\CAN\ENQ \SOH(\r\DC2\DC1\n\tmax_users\CAN\ACK \SOH(\r\"J\n\rSuggestConfig\DC2\SI\n\aversion\CAN\SOH \SOH(\r\DC2\DC2\n\npositional\CAN\STX \SOH(\b\DC2\DC4\n\fpush_to_talk\CAN\ETX \SOH(\bB\EMH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\NUL\184\SOH\NUL\216\SOH\NUL\248\SOH\NULb\ACKproto2")